/*

Xilinx Vivado v2018.2 (64-bit) [Major: 2018, Minor: 2]
SW Build: 2258646 on Thu Jun 14 20:02:38 MDT 2018
IP Build: 2256618 on Thu Jun 14 22:10:49 MDT 2018

Process ID: 77436
License: Customer

Current time: 	Tue Feb 04 07:34:02 CET 2025
Time zone: 	Central European Time (Europe/Berlin)

OS: Ubuntu
OS Version: 5.15.167.4-microsoft-standard-WSL2
OS Architecture: amd64
Available processors (cores): 4

Display: :0
Screen size: 1920x1080
Screen resolution (DPI): 96
Available screens: 1
Available disk space: 880 GB
Default font: family=Dialog,name=Dialog,style=plain,size=12

Java version: 	1.8.0_112 64-bit
Java home: 	/opt/Xilinx/Vivado/2018.2/tps/lnx64/jre
Java executable location: 	/opt/Xilinx/Vivado/2018.2/tps/lnx64/jre/bin/java
Java initial memory (-Xms): 	128 MB
Java maximum memory (-Xmx):	 2 GB


User name: 	haoyu
User home directory: /home/haoyu
User working directory: /home/haoyu/workspace/riscv/riscvBoy/fpga
User country: 	null
User language: 	en
User locale: 	en

RDI_BASEROOT: /opt/Xilinx/Vivado
HDI_APPROOT: /opt/Xilinx/Vivado/2018.2
RDI_DATADIR: /opt/Xilinx/Vivado/2018.2/data
RDI_BINDIR: /opt/Xilinx/Vivado/2018.2/bin

Vivado preferences file location: /home/haoyu/.Xilinx/Vivado/2018.2/vivado.xml
Vivado preferences directory: /home/haoyu/.Xilinx/Vivado/2018.2/
Vivado layouts directory: /home/haoyu/.Xilinx/Vivado/2018.2/layouts
PlanAhead jar file location: 	/opt/Xilinx/Vivado/2018.2/lib/classes/planAhead.jar
Vivado log file location: 	/home/haoyu/workspace/riscv/riscvBoy/fpga/vivado.log
Vivado journal file location: 	/home/haoyu/workspace/riscv/riscvBoy/fpga/vivado.jou
Engine tmp dir: 	./.Xil/Vivado-77436-DESKTOP-K3HRFVS

Xilinx Environment Variables
----------------------------
XILINX: /opt/Xilinx/Vivado/2018.2/ids_lite/ISE
XILINX_DSP: /opt/Xilinx/Vivado/2018.2/ids_lite/ISE
XILINX_PLANAHEAD: /opt/Xilinx/Vivado/2018.2
XILINX_SDK: /opt/Xilinx/SDK/2018.2
XILINX_VIVADO: /opt/Xilinx/Vivado/2018.2
XILINX_VIVADO_HLS: /opt/Xilinx/Vivado/2018.2


GUI allocated memory:	146 MB
GUI max memory:		3,052 MB
Engine allocated memory: 821 MB

Copyright 1986-2018 Xilinx, Inc. All Rights Reserved.

*/

// TclEventType: START_GUI
// Tcl Message: start_gui 
// [GUI Memory]: 54 MB (+54225kb) [00:00:14]
// [Engine Memory]: 820 MB (+707852kb) [00:00:14]
// HMemoryUtils.trashcanNow. Engine heap size: 821 MB. GUI used memory: 31 MB. Current time: 2/4/25 7:34:04 AM CET
selectMenu(PAResourceItoN.MainMenuMgr_FILE, "File"); // V (q, ck)
selectMenu(PAResourceItoN.MainMenuMgr_PROJECT, "Project"); // aa (ck)
selectMenu(PAResourceItoN.MainMenuMgr_CHECKPOINT, "Checkpoint"); // aa (ck)
selectMenu(PAResourceItoN.MainMenuMgr_IP, "IP"); // aa (ck)
selectMenu(PAResourceItoN.MainMenuMgr_CHECKPOINT, "Checkpoint"); // aa (ck)
dismissMenu(PAResourceItoN.MainMenuMgr_FILE, "File"); // V (q, ck)
selectMenu(PAResourceItoN.MainMenuMgr_TOOLS, "Tools"); // V (q, ck)
dismissMenu(PAResourceItoN.MainMenuMgr_TOOLS, "Tools"); // V (q, ck)
selectMenu(PAResourceItoN.MainMenuMgr_WINDOW, "Window"); // V (q, ck)
dismissMenu(PAResourceItoN.MainMenuMgr_WINDOW, "Window"); // V (q, ck)
selectMenu(PAResourceItoN.MainMenuMgr_TOOLS, "Tools"); // V (q, ck)
selectMenu(RDIResourceCommand.RDICommands_CUSTOM_COMMANDS, "Custom Commands"); // aa (ck)
selectMenuItem(PAResourceCommand.PACommandNames_LANGUAGE_TEMPLATES, "Language Templates"); // ad (ck)
dismissMenu(PAResourceItoN.MainMenuMgr_TOOLS, "Tools"); // V (q, ck)
// Run Command: PAResourceCommand.PACommandNames_LANGUAGE_TEMPLATES
// a (ck): Language Templates: addNotify
// [GUI Memory]: 60 MB (+3513kb) [00:00:37]
selectTree(PAResourceItoN.LanguageTemplatesDialog_TEMPLATES_TREE, "[Templates, Verilog]", 0, true); // i (O, a) - Node
expandTree(PAResourceItoN.LanguageTemplatesDialog_TEMPLATES_TREE, "[Templates, Verilog]", 0); // i (O, a)
selectTree(PAResourceItoN.LanguageTemplatesDialog_TEMPLATES_TREE, "[Templates, Verilog, Common Constructs]", 1, true); // i (O, a) - Node
expandTree(PAResourceItoN.LanguageTemplatesDialog_TEMPLATES_TREE, "[Templates, Verilog, Common Constructs]", 1); // i (O, a)
selectTree(PAResourceItoN.LanguageTemplatesDialog_TEMPLATES_TREE, "[Templates, Verilog, Common Constructs, Comments]", 2, true); // i (O, a) - Node
expandTree(PAResourceItoN.LanguageTemplatesDialog_TEMPLATES_TREE, "[Templates, Verilog, Common Constructs, Comments]", 2); // i (O, a)
collapseTree(PAResourceItoN.LanguageTemplatesDialog_TEMPLATES_TREE, "[Templates, Verilog, Common Constructs, Comments]", 2); // i (O, a)
// [GUI Memory]: 63 MB (+321kb) [00:00:53]
expandTree(PAResourceItoN.LanguageTemplatesDialog_TEMPLATES_TREE, "[Templates, Verilog, Synthesis Constructs]", 10); // i (O, a)
expandTree(PAResourceItoN.LanguageTemplatesDialog_TEMPLATES_TREE, "[Templates, Verilog, Synthesis Constructs, Example Modules]", 16); // i (O, a)
expandTree(PAResourceItoN.LanguageTemplatesDialog_TEMPLATES_TREE, "[Templates, Verilog, Synthesis Constructs, Example Modules, RAM]", 19); // i (O, a)
expandTree(PAResourceItoN.LanguageTemplatesDialog_TEMPLATES_TREE, "[Templates, Verilog, Synthesis Constructs, Example Modules, RAM, BlockRAM]", 20); // i (O, a)
// [GUI Memory]: 68 MB (+1873kb) [00:01:08]
expandTree(PAResourceItoN.LanguageTemplatesDialog_TEMPLATES_TREE, "[Templates, Verilog, Synthesis Constructs, Example Modules, RAM, BlockRAM, Simple Dual Port]", 21); // i (O, a)
selectTree(PAResourceItoN.LanguageTemplatesDialog_TEMPLATES_TREE, "[Templates, Verilog, Synthesis Constructs, Example Modules, RAM, BlockRAM, Simple Dual Port, 1 Clock]", 22, false); // i (O, a)
// [Engine Memory]: 865 MB (+4959kb) [00:01:18]
// HMemoryUtils.trashcanNow. Engine heap size: 865 MB. GUI used memory: 38 MB. Current time: 2/4/25 7:35:05 AM CET
// Elapsed time: 73 seconds
selectTree(PAResourceItoN.LanguageTemplatesDialog_TEMPLATES_TREE, "[Templates, Verilog, Synthesis Constructs, Example Modules, RAM, BlockRAM, Simple Dual Port, 2 Clock]", 24, false); // i (O, a)
selectTree(PAResourceItoN.LanguageTemplatesDialog_TEMPLATES_TREE, "[Templates, Verilog, Synthesis Constructs, Example Modules, RAM, BlockRAM, Simple Dual Port, 1 Clock]", 22, false); // i (O, a)
selectTree(PAResourceItoN.LanguageTemplatesDialog_TEMPLATES_TREE, "[Templates, Verilog, Synthesis Constructs, Example Modules, RAM, BlockRAM, Simple Dual Port, 2 Clock]", 24, false); // i (O, a)
selectTree(PAResourceItoN.LanguageTemplatesDialog_TEMPLATES_TREE, "[Templates, Verilog, Synthesis Constructs, Example Modules, RAM, BlockRAM, Simple Dual Port, 1 Clock]", 22, false); // i (O, a)
selectTree(PAResourceItoN.LanguageTemplatesDialog_TEMPLATES_TREE, "[Templates, Verilog, Synthesis Constructs, Example Modules, RAM, BlockRAM, Simple Dual Port, 2 Clock]", 24, false); // i (O, a)
selectTree(PAResourceItoN.LanguageTemplatesDialog_TEMPLATES_TREE, "[Templates, Verilog, Synthesis Constructs, Example Modules, RAM, BlockRAM, Simple Dual Port, 1 Clock]", 22, false); // i (O, a)
selectTree(PAResourceItoN.LanguageTemplatesDialog_TEMPLATES_TREE, "[Templates, Verilog, Synthesis Constructs, Example Modules, RAM, BlockRAM, Simple Dual Port, 2 Clock]", 24, false); // i (O, a)
selectTree(PAResourceItoN.LanguageTemplatesDialog_TEMPLATES_TREE, "[Templates, Verilog, Synthesis Constructs, Example Modules, RAM, BlockRAM, Simple Dual Port, 1 Clock]", 22, false); // i (O, a)
selectTree(PAResourceItoN.LanguageTemplatesDialog_TEMPLATES_TREE, "[Templates, Verilog, Synthesis Constructs, Example Modules, RAM, BlockRAM, Simple Dual Port, 1 Clock w/ Byte-write]", 23, false); // i (O, a)
selectTree(PAResourceItoN.LanguageTemplatesDialog_TEMPLATES_TREE, "[Templates, Verilog, Synthesis Constructs, Example Modules, RAM, BlockRAM, Simple Dual Port, 1 Clock]", 22, false); // i (O, a)
selectTree(PAResourceItoN.LanguageTemplatesDialog_TEMPLATES_TREE, "[Templates, Verilog, Synthesis Constructs, Example Modules, RAM, BlockRAM, Simple Dual Port, 1 Clock w/ Byte-write]", 23, false); // i (O, a)
selectTree(PAResourceItoN.LanguageTemplatesDialog_TEMPLATES_TREE, "[Templates, Verilog, Synthesis Constructs, Example Modules, RAM, BlockRAM, Simple Dual Port, 2 Clock w/ Byte-write]", 25, false); // i (O, a)
expandTree(PAResourceItoN.LanguageTemplatesDialog_TEMPLATES_TREE, "[Templates, Verilog, Synthesis Constructs, Example Modules, RAM, BlockRAM, Single Port]", 26); // i (O, a)
selectTree(PAResourceItoN.LanguageTemplatesDialog_TEMPLATES_TREE, "[Templates, Verilog, Synthesis Constructs, Example Modules, RAM, BlockRAM, Single Port, Write First Mode]", 30, false); // i (O, a)
selectTree(PAResourceItoN.LanguageTemplatesDialog_TEMPLATES_TREE, "[Templates, Verilog, Synthesis Constructs, Example Modules, RAM, BlockRAM, Single Port, Read First Mode]", 29, false); // i (O, a)
selectTree(PAResourceItoN.LanguageTemplatesDialog_TEMPLATES_TREE, "[Templates, Verilog, Synthesis Constructs, Example Modules, RAM, BlockRAM, Single Port, Write First Mode]", 30, false); // i (O, a)
// Elapsed time: 20 seconds
expandTree(PAResourceItoN.LanguageTemplatesDialog_TEMPLATES_TREE, "[Templates, Verilog, Xilinx Parameterized Macros (XPM)]", 37); // i (O, a)
expandTree(PAResourceItoN.LanguageTemplatesDialog_TEMPLATES_TREE, "[Templates, Verilog, Xilinx Parameterized Macros (XPM), XPM]", 39); // i (O, a)
expandTree(PAResourceItoN.LanguageTemplatesDialog_TEMPLATES_TREE, "[Templates, Verilog, Xilinx Parameterized Macros (XPM), XPM, XPM_MEMORY]", 42); // i (O, a)
selectTree(PAResourceItoN.LanguageTemplatesDialog_TEMPLATES_TREE, "[Templates, Verilog, Xilinx Parameterized Macros (XPM), XPM, XPM_MEMORY, Dual Port Distributed RAM (xpm_memory_dpdistram)]", 43, false); // i (O, a)
selectTree(PAResourceItoN.LanguageTemplatesDialog_TEMPLATES_TREE, "[Templates, Verilog, Xilinx Parameterized Macros (XPM), XPM, XPM_MEMORY, Simple Dual Port RAM (xpm_memory_sdpram)]", 45, false); // i (O, a)
// Elapsed time: 10 seconds
selectTree(PAResourceItoN.LanguageTemplatesDialog_TEMPLATES_TREE, "[Templates, Verilog, Xilinx Parameterized Macros (XPM), XPM, XPM_MEMORY, Single Port RAM (xpm_memory_spram)]", 46, false); // i (O, a)
collapseTree(PAResourceItoN.LanguageTemplatesDialog_TEMPLATES_TREE, "[Templates, Verilog, Xilinx Parameterized Macros (XPM), XPM, XPM_MEMORY]", 42); // i (O, a)
selectTree(PAResourceItoN.LanguageTemplatesDialog_TEMPLATES_TREE, "[Templates, Verilog, Xilinx Parameterized Macros (XPM)]", 37, true); // i (O, a) - Node
collapseTree(PAResourceItoN.LanguageTemplatesDialog_TEMPLATES_TREE, "[Templates, Verilog, Xilinx Parameterized Macros (XPM), XPM]", 39); // i (O, a)
expandTree(PAResourceItoN.LanguageTemplatesDialog_TEMPLATES_TREE, "[Templates, Verilog, Synthesis Constructs, Generate]", 33); // i (O, a)
expandTree(PAResourceItoN.LanguageTemplatesDialog_TEMPLATES_TREE, "[Templates, Verilog, Synthesis Constructs, Signal, Constant & Variable Declarations]", 39); // i (O, a)
collapseTree(PAResourceItoN.LanguageTemplatesDialog_TEMPLATES_TREE, "[Templates, Verilog, Synthesis Constructs, Signal, Constant & Variable Declarations]", 39); // i (O, a)
expandTree(PAResourceItoN.LanguageTemplatesDialog_TEMPLATES_TREE, "[Templates, Verilog, IP Integrator HDL]", 8); // i (O, a)
expandTree(PAResourceItoN.LanguageTemplatesDialog_TEMPLATES_TREE, "[Templates, Verilog, IP Integrator HDL, Signal Interfaces]", 11); // i (O, a)
collapseTree(PAResourceItoN.LanguageTemplatesDialog_TEMPLATES_TREE, "[Templates, Verilog, IP Integrator HDL, Signal Interfaces]", 11); // i (O, a)
expandTree(PAResourceItoN.LanguageTemplatesDialog_TEMPLATES_TREE, "[Templates, Verilog, IP Integrator HDL, AXI Interfaces]", 10); // i (O, a)
collapseTree(PAResourceItoN.LanguageTemplatesDialog_TEMPLATES_TREE, "[Templates, Verilog, IP Integrator HDL, AXI Interfaces]", 10); // i (O, a)
expandTree(PAResourceItoN.LanguageTemplatesDialog_TEMPLATES_TREE, "[Templates, Verilog, Simulation Constructs]", 12); // i (O, a)
selectTree(PAResourceItoN.LanguageTemplatesDialog_TEMPLATES_TREE, "[Templates, Verilog, Synthesis Constructs, Coding Examples]", 25, true); // i (O, a) - Node
expandTree(PAResourceItoN.LanguageTemplatesDialog_TEMPLATES_TREE, "[Templates, Verilog, Synthesis Constructs, Coding Examples]", 25); // i (O, a)
expandTree(PAResourceItoN.LanguageTemplatesDialog_TEMPLATES_TREE, "[Templates, Verilog, Synthesis Constructs, Coding Examples, RAM]", 39); // i (O, a)
selectTree(PAResourceItoN.LanguageTemplatesDialog_TEMPLATES_TREE, "[Templates, Verilog, Synthesis Constructs, Coding Examples, RAM, BlockRAM]", 40, true); // i (O, a) - Node
expandTree(PAResourceItoN.LanguageTemplatesDialog_TEMPLATES_TREE, "[Templates, Verilog, Synthesis Constructs, Coding Examples, RAM, BlockRAM]", 40); // i (O, a)
expandTree(PAResourceItoN.LanguageTemplatesDialog_TEMPLATES_TREE, "[Templates, Verilog, Synthesis Constructs, Coding Examples, RAM, BlockRAM, Simple Dual Port]", 41); // i (O, a)
selectTree(PAResourceItoN.LanguageTemplatesDialog_TEMPLATES_TREE, "[Templates, Verilog, Synthesis Constructs, Coding Examples, RAM, BlockRAM, Simple Dual Port, 1 Clock]", 42, false); // i (O, a)
// Elapsed time: 10 seconds
expandTree(PAResourceItoN.LanguageTemplatesDialog_TEMPLATES_TREE, "[Templates, Verilog, Synthesis Constructs, Coding Examples, RAM, Distributed RAM]", 48); // i (O, a)
selectTree(PAResourceItoN.LanguageTemplatesDialog_TEMPLATES_TREE, "[Templates, Verilog, Synthesis Constructs, Coding Examples, RAM, Distributed RAM, Dual Port, Async Read]", 49, false); // i (O, a)
// Elapsed time: 10 seconds
selectTree(PAResourceItoN.LanguageTemplatesDialog_TEMPLATES_TREE, "[Templates, Verilog, Synthesis Constructs, Coding Examples, RAM, BlockRAM, True Dual Port]", 47, true); // i (O, a) - Node
expandTree(PAResourceItoN.LanguageTemplatesDialog_TEMPLATES_TREE, "[Templates, Verilog, Synthesis Constructs, Coding Examples, RAM, BlockRAM, Single Port]", 46); // i (O, a)
selectTree(PAResourceItoN.LanguageTemplatesDialog_TEMPLATES_TREE, "[Templates, Verilog, Synthesis Constructs, Coding Examples, RAM, BlockRAM, Simple Dual Port, 2 Clock]", 44, false); // i (O, a)
// Elapsed time: 56 seconds
selectTree(PAResourceItoN.LanguageTemplatesDialog_TEMPLATES_TREE, "[Templates, Verilog, Synthesis Constructs, Coding Examples, RAM, BlockRAM, Simple Dual Port, 1 Clock]", 42, false); // i (O, a)
// Elapsed time: 29 seconds
collapseTree(PAResourceItoN.LanguageTemplatesDialog_TEMPLATES_TREE, "[Templates, Verilog, IP Integrator HDL]", 8); // i (O, a)
collapseTree(PAResourceItoN.LanguageTemplatesDialog_TEMPLATES_TREE, "[Templates, Verilog, Simulation Constructs]", 9); // i (O, a)
expandTree(PAResourceItoN.LanguageTemplatesDialog_TEMPLATES_TREE, "[Templates, Verilog, Device Macro Instantiation]", 6); // i (O, a)
selectTree(PAResourceItoN.LanguageTemplatesDialog_TEMPLATES_TREE, "[Templates, Verilog, Device Macro Instantiation, Virtex-7]", 9, true); // i (O, a) - Node
expandTree(PAResourceItoN.LanguageTemplatesDialog_TEMPLATES_TREE, "[Templates, Verilog, Device Macro Instantiation, Artix-7]", 7); // i (O, a)
selectTree(PAResourceItoN.LanguageTemplatesDialog_TEMPLATES_TREE, "[Templates, Verilog, Device Macro Instantiation, Artix-7, DSP48]", 8, true); // i (O, a) - Node
expandTree(PAResourceItoN.LanguageTemplatesDialog_TEMPLATES_TREE, "[Templates, Verilog, Device Macro Instantiation, Artix-7, RAM]", 9); // i (O, a)
selectTree(PAResourceItoN.LanguageTemplatesDialog_TEMPLATES_TREE, "[Templates, Verilog, Device Macro Instantiation, Artix-7, RAM, Dual Clock FIFO (FIFO_DUALCLOCK_MACRO)]", 10, false); // i (O, a)
selectTree(PAResourceItoN.LanguageTemplatesDialog_TEMPLATES_TREE, "[Templates, Verilog, Device Macro Instantiation, Artix-7, RAM, Simple Dual Port RAM (BRAM_SDP_MACRO)]", 11, false); // i (O, a)
selectTree(PAResourceItoN.LanguageTemplatesDialog_TEMPLATES_TREE, "[Templates, Verilog, Device Macro Instantiation, Artix-7, RAM, Single Port RAM (BRAM_SINGLE_MACRO)]", 12, false); // i (O, a)
// Elapsed time: 171 seconds
collapseTree(PAResourceItoN.LanguageTemplatesDialog_TEMPLATES_TREE, "[Templates, Verilog, Device Macro Instantiation, Artix-7, RAM]", 9); // i (O, a)
selectTree(PAResourceItoN.LanguageTemplatesDialog_TEMPLATES_TREE, "[Templates, Verilog, Synthesis Constructs, Coding Examples, RAM, BlockRAM, Simple Dual Port, 1 Clock]", 35, false); // i (O, a)
selectTree(PAResourceItoN.LanguageTemplatesDialog_TEMPLATES_TREE, "[Templates, Verilog, Synthesis Constructs, Coding Examples, RAM, Distributed RAM, Dual Port, Async Read]", 46, false); // i (O, a)
collapseTree(PAResourceItoN.LanguageTemplatesDialog_TEMPLATES_TREE, "[Templates, Verilog, Synthesis Constructs, Coding Examples, RAM]", 32); // i (O, a)
collapseTree(PAResourceItoN.LanguageTemplatesDialog_TEMPLATES_TREE, "[Templates, Verilog, Synthesis Constructs, Coding Examples]", 18); // i (O, a)
collapseTree(PAResourceItoN.LanguageTemplatesDialog_TEMPLATES_TREE, "[Templates, Verilog, Synthesis Constructs]", 15); // i (O, a)
collapseTree(PAResourceItoN.LanguageTemplatesDialog_TEMPLATES_TREE, "[Templates, Verilog, Xilinx Parameterized Macros (XPM)]", 16); // i (O, a)
expandTree(PAResourceItoN.LanguageTemplatesDialog_TEMPLATES_TREE, "[Templates, Verilog, IP Integrator HDL]", 13); // i (O, a)
collapseTree(PAResourceItoN.LanguageTemplatesDialog_TEMPLATES_TREE, "[Templates, Verilog, IP Integrator HDL]", 13); // i (O, a)
expandTree(PAResourceItoN.LanguageTemplatesDialog_TEMPLATES_TREE, "[Templates, Verilog, Device Primitive Instantiation]", 12); // i (O, a)
expandTree(PAResourceItoN.LanguageTemplatesDialog_TEMPLATES_TREE, "[Templates, Verilog, Device Primitive Instantiation, Artix-7]", 13); // i (O, a)
selectTree(PAResourceItoN.LanguageTemplatesDialog_TEMPLATES_TREE, "[Templates, Verilog, Device Primitive Instantiation, Artix-7, RAM/ROM]", 19, true); // i (O, a) - Node
expandTree(PAResourceItoN.LanguageTemplatesDialog_TEMPLATES_TREE, "[Templates, Verilog, Device Primitive Instantiation, Artix-7, RAM/ROM]", 19); // i (O, a)
selectTree(PAResourceItoN.LanguageTemplatesDialog_TEMPLATES_TREE, "[Templates, Verilog, Device Primitive Instantiation, Artix-7, RAM/ROM, BlockRAM]", 20, true); // i (O, a) - Node
expandTree(PAResourceItoN.LanguageTemplatesDialog_TEMPLATES_TREE, "[Templates, Verilog, Device Primitive Instantiation, Artix-7, RAM/ROM, BlockRAM]", 20); // i (O, a)
selectTree(PAResourceItoN.LanguageTemplatesDialog_TEMPLATES_TREE, "[Templates, Verilog, Device Primitive Instantiation, Artix-7, RAM/ROM, BlockRAM, 36Kb Block RAM Memory (RAMB36E1)]", 22, false); // i (O, a)
// Elapsed time: 24 seconds
selectTree(PAResourceItoN.LanguageTemplatesDialog_TEMPLATES_TREE, "[Templates, Verilog, Device Primitive Instantiation, Artix-7, RAM/ROM, BlockRAM, 18Kb Block RAM Memory (RAMB18E1)]", 21, false); // i (O, a)
// Elapsed time: 13 seconds
selectTree(PAResourceItoN.LanguageTemplatesDialog_TEMPLATES_TREE, "[Templates, Verilog, Device Primitive Instantiation, Virtex UltraScale]", 31, true); // i (O, a) - Node
selectTree(PAResourceItoN.LanguageTemplatesDialog_TEMPLATES_TREE, "[Templates, Verilog, Device Primitive Instantiation, Kintex UltraScale]", 28, true); // i (O, a) - Node
collapseTree(PAResourceItoN.LanguageTemplatesDialog_TEMPLATES_TREE, "[Templates, Verilog, Device Primitive Instantiation, Artix-7]", 13); // i (O, a)
expandTree(PAResourceItoN.LanguageTemplatesDialog_TEMPLATES_TREE, "[Templates, Verilog, Device Primitive Instantiation, Kintex UltraScale]", 14); // i (O, a)
selectTree(PAResourceItoN.LanguageTemplatesDialog_TEMPLATES_TREE, "[Templates, Verilog, Device Primitive Instantiation, Kintex UltraScale, BLOCKRAM]", 17, true); // i (O, a) - Node
expandTree(PAResourceItoN.LanguageTemplatesDialog_TEMPLATES_TREE, "[Templates, Verilog, Device Primitive Instantiation, Kintex UltraScale, BLOCKRAM]", 17); // i (O, a)
selectTree(PAResourceItoN.LanguageTemplatesDialog_TEMPLATES_TREE, "[Templates, Verilog, Device Primitive Instantiation, Kintex UltraScale, BLOCKRAM, BRAM]", 18, true); // i (O, a) - Node
expandTree(PAResourceItoN.LanguageTemplatesDialog_TEMPLATES_TREE, "[Templates, Verilog, Device Primitive Instantiation, Kintex UltraScale, BLOCKRAM, BRAM]", 18); // i (O, a)
selectTree(PAResourceItoN.LanguageTemplatesDialog_TEMPLATES_TREE, "[Templates, Verilog, Device Primitive Instantiation, Kintex UltraScale, BLOCKRAM, BRAM, 18Kb Block RAM Memory (RAMB18E2)]", 19, false); // i (O, a)
// Elapsed time: 12 seconds
dismissDialog("Language Templates"); // a (ck)
// Elapsed time: 77 seconds
selectMenu(PAResourceItoN.MainMenuMgr_WINDOW, "Window"); // V (q, ck)
dismissMenu(PAResourceItoN.MainMenuMgr_WINDOW, "Window"); // V (q, ck)
selectMenu(PAResourceItoN.MainMenuMgr_TOOLS, "Tools"); // V (q, ck)
selectMenu(RDIResourceCommand.RDICommands_CUSTOM_COMMANDS, "Custom Commands"); // aa (ck)
selectMenuItem(PAResourceCommand.PACommandNames_LANGUAGE_TEMPLATES, "Language Templates"); // ad (ck)
dismissMenu(PAResourceItoN.MainMenuMgr_TOOLS, "Tools"); // V (q, ck)
// Run Command: PAResourceCommand.PACommandNames_LANGUAGE_TEMPLATES
// a (ck): Language Templates: addNotify
collapseTree(PAResourceItoN.LanguageTemplatesDialog_TEMPLATES_TREE, "[Templates, Verilog, Device Primitive Instantiation, Kintex UltraScale, BLOCKRAM, BRAM]", 18); // i (O, a)
collapseTree(PAResourceItoN.LanguageTemplatesDialog_TEMPLATES_TREE, "[Templates, Verilog, Device Primitive Instantiation, Kintex UltraScale, BLOCKRAM]", 17); // i (O, a)
collapseTree(PAResourceItoN.LanguageTemplatesDialog_TEMPLATES_TREE, "[Templates, Verilog, Device Primitive Instantiation, Kintex UltraScale]", 14); // i (O, a)
collapseTree(PAResourceItoN.LanguageTemplatesDialog_TEMPLATES_TREE, "[Templates, Verilog, Device Primitive Instantiation]", 12); // i (O, a)
expandTree(PAResourceItoN.LanguageTemplatesDialog_TEMPLATES_TREE, "[Templates, Verilog, IP Integrator HDL]", 13); // i (O, a)
collapseTree(PAResourceItoN.LanguageTemplatesDialog_TEMPLATES_TREE, "[Templates, Verilog, IP Integrator HDL]", 13); // i (O, a)
expandTree(PAResourceItoN.LanguageTemplatesDialog_TEMPLATES_TREE, "[Templates, Verilog, Xilinx Parameterized Macros (XPM)]", 16); // i (O, a)
expandTree(PAResourceItoN.LanguageTemplatesDialog_TEMPLATES_TREE, "[Templates, Verilog, Synthesis Constructs]", 15); // i (O, a)
selectTree(PAResourceItoN.LanguageTemplatesDialog_TEMPLATES_TREE, "[Templates, Verilog, Synthesis Constructs, Example Modules, RAM, BlockRAM, Simple Dual Port, 1 Clock]", 27, false); // i (O, a)
selectTree(PAResourceItoN.LanguageTemplatesDialog_TEMPLATES_TREE, "[Templates, Verilog, Synthesis Constructs, Example Modules, RAM, BlockRAM, Simple Dual Port, 2 Clock]", 29, false); // i (O, a)
typeControlKey(null, null, 'c'); // c (c, a)
// Elapsed time: 34 seconds
selectTree(PAResourceItoN.LanguageTemplatesDialog_TEMPLATES_TREE, "[Templates, Verilog, Synthesis Constructs, Example Modules, RAM, BlockRAM, Simple Dual Port, 1 Clock]", 27, false); // i (O, a)
// Elapsed time: 215 seconds
selectTree(PAResourceItoN.LanguageTemplatesDialog_TEMPLATES_TREE, "[Templates, Verilog, Synthesis Constructs, Example Modules, RAM, BlockRAM, Single Port, No Change Mode]", 33, false); // i (O, a)
selectTree(PAResourceItoN.LanguageTemplatesDialog_TEMPLATES_TREE, "[Templates, Verilog, Synthesis Constructs, Example Modules, RAM, BlockRAM, Single Port, Write First Mode]", 35, false); // i (O, a)
selectTree(PAResourceItoN.LanguageTemplatesDialog_TEMPLATES_TREE, "[Templates, Verilog, Synthesis Constructs, Example Modules, RAM, BlockRAM, Single Port, Byte-wide Write Enable]", 32, true); // i (O, a) - Node
selectTree(PAResourceItoN.LanguageTemplatesDialog_TEMPLATES_TREE, "[Templates, Verilog, Synthesis Constructs, Example Modules, RAM, BlockRAM, Single Port, No Change Mode]", 33, false); // i (O, a)
selectTree(PAResourceItoN.LanguageTemplatesDialog_TEMPLATES_TREE, "[Templates, Verilog, Synthesis Constructs, Example Modules, RAM, BlockRAM, Single Port, Byte-wide Write Enable]", 32, true); // i (O, a) - Node
selectTree(PAResourceItoN.LanguageTemplatesDialog_TEMPLATES_TREE, "[Templates, Verilog, Synthesis Constructs, Example Modules, RAM, BlockRAM, Single Port, No Change Mode]", 33, false); // i (O, a)
expandTree(PAResourceItoN.LanguageTemplatesDialog_TEMPLATES_TREE, "[Templates, Verilog, Synthesis Constructs, Example Modules, RAM, BlockRAM, Single Port, Byte-wide Write Enable]", 32); // i (O, a)
selectTree(PAResourceItoN.LanguageTemplatesDialog_TEMPLATES_TREE, "[Templates, Verilog, Synthesis Constructs, Example Modules, RAM, BlockRAM, Single Port, Byte-wide Write Enable]", 32, true); // i (O, a) - Node
selectTree(PAResourceItoN.LanguageTemplatesDialog_TEMPLATES_TREE, "[Templates, Verilog, Synthesis Constructs, Example Modules, RAM, BlockRAM, Single Port, Byte-wide Write Enable, Read First Mode]", 33, false); // i (O, a)
selectTree(PAResourceItoN.LanguageTemplatesDialog_TEMPLATES_TREE, "[Templates, Verilog, Synthesis Constructs, Example Modules, RAM, BlockRAM, Single Port, Byte-wide Write Enable, Write First Mode]", 34, false); // i (O, a)
selectTree(PAResourceItoN.LanguageTemplatesDialog_TEMPLATES_TREE, "[Templates, Verilog, Synthesis Constructs, Example Modules, RAM, BlockRAM, Single Port, No Change Mode]", 35, false); // i (O, a)
collapseTree(PAResourceItoN.LanguageTemplatesDialog_TEMPLATES_TREE, "[Templates, Verilog, Synthesis Constructs, Example Modules, RAM, BlockRAM, Single Port, Byte-wide Write Enable]", 32); // i (O, a)
// Elapsed time: 135 seconds
selectTree(PAResourceItoN.LanguageTemplatesDialog_TEMPLATES_TREE, "[Templates, Verilog, Synthesis Constructs, Example Modules, RAM, BlockRAM, Simple Dual Port, 1 Clock]", 27, false); // i (O, a)
selectTree(PAResourceItoN.LanguageTemplatesDialog_TEMPLATES_TREE, "[Templates, Verilog, Synthesis Constructs, Example Modules, RAM, BlockRAM, Simple Dual Port, 2 Clock]", 29, false); // i (O, a)
selectTree(PAResourceItoN.LanguageTemplatesDialog_TEMPLATES_TREE, "[Templates, Verilog, Synthesis Constructs, Example Modules, RAM, BlockRAM, Simple Dual Port, 1 Clock]", 27, false); // i (O, a)
// [GUI Memory]: 73 MB (+923kb) [00:20:08]
// Elapsed time: 22 seconds
typeControlKey(null, null, 'c'); // c (c, a)
// Elapsed time: 139 seconds
typeControlKey(null, null, 'c'); // c (c, a)
// Elapsed time: 66 seconds
dismissDialog("Language Templates"); // a (ck)
selectButton(PAResourceEtoH.GettingStartedView_OPEN_EXAMPLE_PROJECT, "Open Example Project"); // x (w, ck)
// [Engine Memory]: 932 MB (+24557kb) [00:23:40]
// a (ck): Open Example Project: addNotify
// HMemoryUtils.trashcanNow. Engine heap size: 941 MB. GUI used memory: 37 MB. Current time: 2/4/25 7:57:27 AM CET
selectButton(PAResourceEtoH.GettingStartedView_OPEN_EXAMPLE_PROJECT, "Open Example Project"); // x (w, ck)
dismissDialog("Open Example Project"); // a (ck)
selectButton(PAResourceEtoH.GettingStartedView_CREATE_NEW_PROJECT, "Create Project"); // x (w, ck)
// Run Command: PAResourceCommand.PACommandNames_NEW_PROJECT
// [GUI Memory]: 77 MB (+150kb) [00:23:44]
// f (ck): New Project: addNotify
selectButton("NEXT", "Next >"); // JButton (j, f)
setText(PAResourceOtoP.ProjectNameChooser_PROJECT_NAME, "example"); // X (Q, f)
selectButton("NEXT", "Next >"); // JButton (j, f)
selectButton("NEXT", "Next >"); // JButton (j, f)
selectButton(PAResourceQtoS.SrcChooserPanel_ADD_HDL_AND_NETLIST_FILES_TO_YOUR_PROJECT, "Add Files"); // a (C, f)
selectButton(PAResourceQtoS.SrcChooserPanel_ADD_HDL_AND_NETLIST_FILES_TO_YOUR_PROJECT, "Add Files"); // a (C, f)
// [Engine Memory]: 986 MB (+7809kb) [00:24:05]
// HMemoryUtils.trashcanNow. Engine heap size: 986 MB. GUI used memory: 42 MB. Current time: 2/4/25 7:57:52 AM CET
// Elapsed time: 22 seconds
setFileChooser("/home/haoyu/workspace/riscv/riscvBoy/code/rtl/cbb/SDP_RAM.v");
selectButton("NEXT", "Next >"); // JButton (j, f)
selectButton("NEXT", "Next >"); // JButton (j, f)
selectButton("NEXT", "Next >"); // JButton (j, f)
// bx (f):  Create Project : addNotify
// TclEventType: DEBUG_PROBE_SET_CHANGE
// TclEventType: FILE_SET_NEW
// TclEventType: RUN_ADD
// TclEventType: RUN_CURRENT
// TclEventType: PROJECT_NEW
// Tcl Message: create_project example /home/haoyu/workspace/riscv/riscvBoy/fpga/example -part xc7vx485tffg1157-1 
// Tcl Message: INFO: [IP_Flow 19-234] Refreshing IP repositories INFO: [IP_Flow 19-1704] No user IP repositories specified 
// Tcl Message: INFO: [IP_Flow 19-2313] Loaded Vivado IP repository '/opt/Xilinx/Vivado/2018.2/data/ip'. 
// TclEventType: PROJECT_NEW
// TclEventType: FILE_SET_OPTIONS_CHANGE
// Tcl Message: create_project: Time (s): cpu = 00:00:12 ; elapsed = 00:00:08 . Memory (MB): peak = 6142.582 ; gain = 9.906 ; free physical = 203 ; free virtual = 2995 
// TclEventType: FILE_SET_CHANGE
// Tcl Message: add_files -norecurse /home/haoyu/workspace/riscv/riscvBoy/code/rtl/cbb/SDP_RAM.v 
// Elapsed time: 10 seconds
selectButton("FINISH", "Finish"); // JButton (j, f)
// 'g' command handler elapsed time: 61 seconds
selectButton(PAResourceEtoH.GettingStartedView_CREATE_NEW_PROJECT, "Create Project"); // x (w)
dismissDialog("Create Project"); // bx (f)
dismissDialog("New Project"); // f (ck)
// HMemoryUtils.trashcanNow. Engine heap size: 1,016 MB. GUI used memory: 43 MB. Current time: 2/4/25 7:58:33 AM CET
// TclEventType: DG_ANALYSIS_MSG_RESET
selectButton(PAResourceItoN.MainToolbarMgr_RUN, (String) null); // ax (f, ck)
// TclEventType: DG_GRAPH_GENERATED
selectMenuItem(PAResourceCommand.PACommandNames_RUN_SYNTHESIS, "Run Synthesis"); // ad (ck)
// Run Command: PAResourceCommand.PACommandNames_RUN_SYNTHESIS
// ab (ck): Specify Top Module: addNotify
// TclEventType: FILE_SET_CHANGE
// TclEventType: DG_GRAPH_STALE
// TclEventType: FILE_SET_CHANGE
// TclEventType: DG_GRAPH_STALE
// Tcl Message: update_compile_order -fileset sources_1 
// TclEventType: DG_ANALYSIS_MSG_RESET
// TclEventType: DG_ANALYSIS_MSG_RESET
// [Engine Memory]: 1,050 MB (+15316kb) [00:24:53]
// TclEventType: DG_ANALYSIS_MSG_RESET
// TclEventType: DG_GRAPH_GENERATED
selectButton(RDIResource.BaseDialog_CANCEL, "Cancel"); // a (ab)
selectButton(RDIResource.BaseDialog_CANCEL, "Cancel"); // a (ab)
// 'k' command handler elapsed time: 4 seconds
dismissDialog("Specify Top Module"); // ab (ck)
// PAPropertyPanels.initPanels (SDP_RAM.v) elapsed time: 0.2s
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, SDP_RAM (SDP_RAM.v)]", 1, false); // B (D, ck)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, SDP_RAM (SDP_RAM.v)]", 1, false, false, false, false, false, true); // B (D, ck) - Double Click
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, SDP_RAM (SDP_RAM.v)]", 1, false, false, false, false, true, false); // B (D, ck) - Popup Trigger
// [GUI Memory]: 85 MB (+4419kb) [00:24:57]
selectMenu(PAResourceCommand.PACommandNames_AUTO_UPDATE_HIER, "Hierarchy Update"); // aa (aj, ck)
selectMenu(PAResourceQtoS.SrcMenu_IP_HIERARCHY, "IP Hierarchy"); // aa (aj, ck)
selectMenu(PAResourceQtoS.SrcMenu_IP_HIERARCHY, "IP Hierarchy"); // aa (aj, ck)
selectMenu(PAResourceCommand.PACommandNames_AUTO_UPDATE_HIER, "Hierarchy Update"); // aa (aj, ck)
selectTree(PAResourceEtoH.FlowNavigatorTreePanel_FLOW_NAVIGATOR_TREE, "[, Synthesis, Run Synthesis]", 14, false); // u (O, ck)
// Run Command: PAResourceCommand.PACommandNames_RUN_SYNTHESIS
// f (ck): Launch Runs: addNotify
selectButton(RDIResource.BaseDialog_OK, "OK"); // a (f)
selectButton(RDIResource.BaseDialog_OK, "OK"); // a (f)
// bx (ck):  Starting Design Runs : addNotify
dismissDialog("Launch Runs"); // f (ck)
// TclEventType: RUN_LAUNCH
// Tcl Message: launch_runs synth_1 -jobs 2 
// TclEventType: RUN_MODIFY
// Tcl Message: [Tue Feb  4 07:59:00 2025] Launched synth_1... Run output will be captured here: /home/haoyu/workspace/riscv/riscvBoy/fpga/example/example.runs/synth_1/runme.log 
// 'k' command handler elapsed time: 3 seconds
dismissDialog("Starting Design Runs"); // bx (ck)
// TclEventType: RUN_FAILED
// WARNING: HTimer (ExpRunMgr Pending Runs Timer) is taking 1070ms to process. Increasing delay to 3000 ms.
// ah (ck): Synthesis Failed: addNotify
// HMemoryUtils.trashcanNow. Engine heap size: 1,090 MB. GUI used memory: 45 MB. Current time: 2/4/25 7:59:30 AM CET
// Elapsed time: 29 seconds
selectButton(RDIResource.BaseDialog_OK, "OK"); // a (ah)
selectButton(RDIResource.BaseDialog_OK, "OK"); // a (ah)
// Run Command: PAResourceCommand.PACommandNames_MESSAGE_WINDOW
dismissDialog("Synthesis Failed"); // ah (ck)
// Elapsed time: 13 seconds
selectCheckBox(PAResourceItoN.MsgView_WARNING_MESSAGES, (String) null, false); // g (aQ, ck): FALSE
selectCheckBox(PAResourceItoN.MsgView_WARNING_MESSAGES, (String) null, true); // g (aQ, ck): TRUE
selectCheckBox(PAResourceItoN.MsgView_WARNING_MESSAGES, (String) null, false); // g (aQ, ck): FALSE
selectMenu(PAResourceItoN.MainMenuMgr_REPORTS, "Reports"); // V (q, ck)
dismissMenu(PAResourceItoN.MainMenuMgr_REPORTS, "Reports"); // V (q, ck)
selectMenu(PAResourceItoN.MainMenuMgr_TOOLS, "Tools"); // V (q, ck)
dismissMenu(PAResourceItoN.MainMenuMgr_TOOLS, "Tools"); // V (q, ck)
selectMenu(PAResourceItoN.MainMenuMgr_FLOW, "Flow"); // V (q, ck)
dismissMenu(PAResourceItoN.MainMenuMgr_FLOW, "Flow"); // V (q, ck)
selectMenu(PAResourceItoN.MainMenuMgr_EDIT, "Edit"); // V (q, ck)
dismissMenu(PAResourceItoN.MainMenuMgr_EDIT, "Edit"); // V (q, ck)
selectMenu(PAResourceItoN.MainMenuMgr_FLOW, "Flow"); // V (q, ck)
dismissMenu(PAResourceItoN.MainMenuMgr_FLOW, "Flow"); // V (q, ck)
selectMenu(PAResourceItoN.MainMenuMgr_TOOLS, "Tools"); // V (q, ck)
dismissMenu(PAResourceItoN.MainMenuMgr_TOOLS, "Tools"); // V (q, ck)
selectMenu(PAResourceItoN.MainMenuMgr_REPORTS, "Reports"); // V (q, ck)
dismissMenu(PAResourceItoN.MainMenuMgr_REPORTS, "Reports"); // V (q, ck)
selectMenu(PAResourceItoN.MainMenuMgr_WINDOW, "Window"); // V (q, ck)
dismissMenu(PAResourceItoN.MainMenuMgr_WINDOW, "Window"); // V (q, ck)
selectMenu(RDIResource.MainWinMenuMgr_LAYOUT, "Layout"); // V (q, ck)
dismissMenu(RDIResource.MainWinMenuMgr_LAYOUT, "Layout"); // V (q, ck)
selectMenu(PAResourceItoN.MainMenuMgr_VIEW, "View"); // V (q, ck)
dismissMenu(PAResourceItoN.MainMenuMgr_VIEW, "View"); // V (q, ck)
selectMenu(PAResourceItoN.MainMenuMgr_HELP, "Help"); // V (q, ck)
selectMenu(PAResourceItoN.MainMenuMgr_DESIGN_HUBS, "Design Hubs"); // aa (ck)
selectMenuItem(PAResourceCommand.PACommandNames_LICENSE_MANAGE, "Manage License..."); // ad (ck)
dismissMenu(PAResourceItoN.MainMenuMgr_HELP, "Help"); // V (q, ck)
// Run Command: PAResourceCommand.PACommandNames_LICENSE_MANAGE
// [GUI Memory]: 90 MB (+862kb) [00:27:17]
// TclEventType: DG_GRAPH_STALE
// TclEventType: FILE_SET_CHANGE
// TclEventType: DG_ANALYSIS_MSG_RESET
// [Engine Memory]: 1,109 MB (+7319kb) [00:32:19]
// TclEventType: DG_ANALYSIS_MSG_RESET
// TclEventType: DG_GRAPH_GENERATED
// HMemoryUtils.trashcanNow. Engine heap size: 1,109 MB. GUI used memory: 81 MB. Current time: 2/4/25 8:06:09 AM CET
// TclEventType: DG_GRAPH_STALE
// TclEventType: FILE_SET_CHANGE
// TclEventType: DG_ANALYSIS_MSG_RESET
// TclEventType: DG_GRAPH_GENERATED
// TclEventType: DG_GRAPH_STALE
// TclEventType: FILE_SET_CHANGE
// TclEventType: DG_ANALYSIS_MSG_RESET
// HMemoryUtils.trashcanNow. Engine heap size: 1,142 MB. GUI used memory: 45 MB. Current time: 2/4/25 8:07:00 AM CET
// TclEventType: DG_GRAPH_GENERATED
// TclEventType: DG_GRAPH_STALE
// TclEventType: FILE_SET_CHANGE
// TclEventType: DG_ANALYSIS_MSG_RESET
// TclEventType: DG_GRAPH_GENERATED
// TclEventType: DG_GRAPH_STALE
// TclEventType: FILE_SET_CHANGE
// TclEventType: DG_ANALYSIS_MSG_RESET
// [Engine Memory]: 1,175 MB (+10676kb) [00:33:25]
// TclEventType: DG_ANALYSIS_MSG_RESET
// TclEventType: DG_GRAPH_GENERATED
// TclEventType: DG_GRAPH_STALE
// TclEventType: FILE_SET_CHANGE
// TclEventType: DG_ANALYSIS_MSG_RESET
// TclEventType: DG_GRAPH_GENERATED
// TclEventType: DG_GRAPH_STALE
// TclEventType: FILE_SET_CHANGE
// TclEventType: DG_ANALYSIS_MSG_RESET
// HMemoryUtils.trashcanNow. Engine heap size: 1,208 MB. GUI used memory: 85 MB. Current time: 2/4/25 8:07:21 AM CET
// TclEventType: DG_GRAPH_GENERATED
// [GUI Memory]: 95 MB (+806kb) [00:34:12]
// Elapsed time: 532 seconds
selectTree(PAResourceItoN.MsgTreePanel_MESSAGE_VIEW_TREE, "[, Synthesis, [Common 17-345] A valid license was not found for feature 'Synthesis' and/or device 'xc7vx485t'. Please run the Vivado License Manager for assistance in determining. which features and devices are licensed for your system.. Resolution: Check the status of your licenses in the Vivado License Manager. For debug help search Xilinx Support for Licensing FAQ. If you are using a license server, verify that the license server is up and running a version of the xilinx daemon that is compatible with the version of Xilinx software that you are using. Please note that Vivado 2017.3 and later requires upgrading your license server tools to the Flex 11.14.1 tools. Please confirm with your license admin that the correct version of the license server tools are installed.. ]", 1, false); // ah (O, ck)
selectButton(PAResourceAtoD.AbstractFileView_RELOAD, "Reload"); // h (cM, ck)
selectButton(PAResourceAtoD.AbstractFileView_RELOAD, "Reload"); // h
// TclEventType: DG_GRAPH_STALE
// TclEventType: FILE_SET_CHANGE
// TclEventType: DG_ANALYSIS_MSG_RESET
// TclEventType: DG_GRAPH_GENERATED
selectButton(PAResourceItoN.MainToolbarMgr_RUN, (String) null); // ax (f, ck)
selectMenuItem(PAResourceCommand.PACommandNames_RUN_SYNTHESIS, "Run Synthesis"); // ad (ck)
// Run Command: PAResourceCommand.PACommandNames_RUN_SYNTHESIS
// bx (ck):  Resetting Runs : addNotify
// TclEventType: RUN_MODIFY
// TclEventType: RUN_RESET
// TclEventType: RUN_MODIFY
// Tcl Message: reset_run synth_1 
// f (ck): Launch Runs: addNotify
selectButton(RDIResource.BaseDialog_OK, "OK"); // a (f)
selectButton(RDIResource.BaseDialog_OK, "OK"); // a (f)
// bx (ck):  Starting Design Runs : addNotify
dismissDialog("Launch Runs"); // f (ck)
// TclEventType: RUN_LAUNCH
// TclEventType: RUN_MODIFY
// Tcl Message: launch_runs synth_1 -jobs 2 
// Tcl Message: [Tue Feb  4 08:09:13 2025] Launched synth_1... Run output will be captured here: /home/haoyu/workspace/riscv/riscvBoy/fpga/example/example.runs/synth_1/runme.log 
dismissDialog("Starting Design Runs"); // bx (ck)
expandTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Simulation Sources]", 3); // B (D, ck)
collapseTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Simulation Sources]", 3); // B (D, ck)
selectTab(PAResourceEtoH.FileSetView_TABBED_PANE, (HResource) null, "Libraries", 1); // i (N, ck)
selectTab(PAResourceEtoH.FileSetView_TABBED_PANE, (HResource) null, "Compile Order", 2); // i (N, ck)
selectTab(PAResourceEtoH.FileSetView_TABBED_PANE, (HResource) null, "Hierarchy", 0); // i (N, ck)
// TclEventType: RUN_FAILED
// ah (ck): Synthesis Failed: addNotify
selectButton(RDIResource.BaseDialog_OK, "OK"); // a (ah)
selectButton(RDIResource.BaseDialog_OK, "OK"); // a (ah)
// Run Command: PAResourceCommand.PACommandNames_MESSAGE_WINDOW
dismissDialog("Synthesis Failed"); // ah (ck)
selectTree(PAResourceItoN.MsgTreePanel_MESSAGE_VIEW_TREE, "[, Synthesis, [Common 17-345] A valid license was not found for feature 'Synthesis' and/or device 'xc7vx485t'. Please run the Vivado License Manager for assistance in determining. which features and devices are licensed for your system.. Resolution: Check the status of your licenses in the Vivado License Manager. For debug help search Xilinx Support for Licensing FAQ. If you are using a license server, verify that the license server is up and running a version of the xilinx daemon that is compatible with the version of Xilinx software that you are using. Please note that Vivado 2017.3 and later requires upgrading your license server tools to the Flex 11.14.1 tools. Please confirm with your license admin that the correct version of the license server tools are installed.. ]", 1, false); // ah (O, ck)
selectTree(PAResourceItoN.MsgTreePanel_MESSAGE_VIEW_TREE, "[, Synthesis, [Common 17-345] A valid license was not found for feature 'Synthesis' and/or device 'xc7vx485t'. Please run the Vivado License Manager for assistance in determining. which features and devices are licensed for your system.. Resolution: Check the status of your licenses in the Vivado License Manager. For debug help search Xilinx Support for Licensing FAQ. If you are using a license server, verify that the license server is up and running a version of the xilinx daemon that is compatible with the version of Xilinx software that you are using. Please note that Vivado 2017.3 and later requires upgrading your license server tools to the Flex 11.14.1 tools. Please confirm with your license admin that the correct version of the license server tools are installed.. ]", 1, false, false, false, false, false, true); // ah (O, ck) - Double Click
selectTree(PAResourceItoN.MsgTreePanel_MESSAGE_VIEW_TREE, "[, Synthesis, [Common 17-345] A valid license was not found for feature 'Synthesis' and/or device 'xc7vx485t'. Please run the Vivado License Manager for assistance in determining. which features and devices are licensed for your system.. Resolution: Check the status of your licenses in the Vivado License Manager. For debug help search Xilinx Support for Licensing FAQ. If you are using a license server, verify that the license server is up and running a version of the xilinx daemon that is compatible with the version of Xilinx software that you are using. Please note that Vivado 2017.3 and later requires upgrading your license server tools to the Flex 11.14.1 tools. Please confirm with your license admin that the correct version of the license server tools are installed.. ]", 1, false); // ah (O, ck)
selectTree(PAResourceItoN.MsgTreePanel_MESSAGE_VIEW_TREE, "[, Synthesis, [Common 17-345] A valid license was not found for feature 'Synthesis' and/or device 'xc7vx485t'. Please run the Vivado License Manager for assistance in determining. which features and devices are licensed for your system.. Resolution: Check the status of your licenses in the Vivado License Manager. For debug help search Xilinx Support for Licensing FAQ. If you are using a license server, verify that the license server is up and running a version of the xilinx daemon that is compatible with the version of Xilinx software that you are using. Please note that Vivado 2017.3 and later requires upgrading your license server tools to the Flex 11.14.1 tools. Please confirm with your license admin that the correct version of the license server tools are installed.. ]", 1, false, false, false, false, false, true); // ah (O, ck) - Double Click
selectTree(PAResourceItoN.MsgTreePanel_MESSAGE_VIEW_TREE, "[, Synthesis, [Common 17-345] A valid license was not found for feature 'Synthesis' and/or device 'xc7vx485t'. Please run the Vivado License Manager for assistance in determining. which features and devices are licensed for your system.. Resolution: Check the status of your licenses in the Vivado License Manager. For debug help search Xilinx Support for Licensing FAQ. If you are using a license server, verify that the license server is up and running a version of the xilinx daemon that is compatible with the version of Xilinx software that you are using. Please note that Vivado 2017.3 and later requires upgrading your license server tools to the Flex 11.14.1 tools. Please confirm with your license admin that the correct version of the license server tools are installed.. ]", 1, false); // ah (O, ck)
selectMenu(PAResourceItoN.MainMenuMgr_VIEW, "View"); // V (q, ck)
selectMenu(PAResourceItoN.MainMenuMgr_UNSELECT_TYPE, "Unselect Type"); // aa (ck)
selectMenu(PAResourceItoN.MainMenuMgr_UNSELECT_TYPE, "Unselect Type"); // aa (ck)
dismissMenu(PAResourceItoN.MainMenuMgr_VIEW, "View"); // V (q, ck)
selectMenu(PAResourceItoN.MainMenuMgr_HELP, "Help"); // V (q, ck)
selectMenu(PAResourceItoN.MainMenuMgr_DESIGN_HUBS, "Design Hubs"); // aa (ck)
selectMenuItem(PAResourceCommand.PACommandNames_LICENSE_MANAGE, "Manage License..."); // ad (ck)
dismissMenu(PAResourceItoN.MainMenuMgr_HELP, "Help"); // V (q, ck)
// Run Command: PAResourceCommand.PACommandNames_LICENSE_MANAGE
// Elapsed time: 49 seconds
selectMenu(PAResourceItoN.MainMenuMgr_FILE, "File"); // V (q, ck)
selectMenu(PAResourceItoN.MainMenuMgr_PROJECT, "Project"); // aa (ck)
selectMenu(PAResourceItoN.MainMenuMgr_CHECKPOINT, "Checkpoint"); // aa (ck)
selectMenu(PAResourceItoN.MainMenuMgr_IP, "IP"); // aa (ck)
selectMenu(PAResourceItoN.MainMenuMgr_TEXT_EDITOR, "Text Editor"); // aa (ck)
selectMenu(PAResourceItoN.MainMenuMgr_EXPORT, "Export"); // aa (ck)
selectMenu(PAResourceItoN.MainMenuMgr_EXPORT, "Export"); // aa (ck)
selectMenu(PAResourceItoN.MainMenuMgr_TEXT_EDITOR, "Text Editor"); // aa (ck)
selectMenu(PAResourceItoN.MainMenuMgr_IP, "IP"); // aa (ck)
selectMenu(PAResourceItoN.MainMenuMgr_TEXT_EDITOR, "Text Editor"); // aa (ck)
selectMenu(PAResourceItoN.MainMenuMgr_IP, "IP"); // aa (ck)
selectMenu(PAResourceItoN.MainMenuMgr_TEXT_EDITOR, "Text Editor"); // aa (ck)
selectMenu(PAResourceItoN.MainMenuMgr_EXPORT, "Export"); // aa (ck)
selectMenu(PAResourceItoN.MainMenuMgr_TEXT_EDITOR, "Text Editor"); // aa (ck)
selectMenu(PAResourceItoN.MainMenuMgr_IP, "IP"); // aa (ck)
selectMenu(PAResourceItoN.MainMenuMgr_EXPORT, "Export"); // aa (ck)
selectMenu(PAResourceItoN.MainMenuMgr_TEXT_EDITOR, "Text Editor"); // aa (ck)
selectMenu(PAResourceItoN.MainMenuMgr_IP, "IP"); // aa (ck)
selectMenu(PAResourceItoN.MainMenuMgr_CHECKPOINT, "Checkpoint"); // aa (ck)
dismissMenu(PAResourceItoN.MainMenuMgr_FILE, "File"); // V (q, ck)
selectMenu(RDIResource.MainWinMenuMgr_LAYOUT, "Layout"); // V (q, ck)
dismissMenu(RDIResource.MainWinMenuMgr_LAYOUT, "Layout"); // V (q, ck)
selectMenu(PAResourceItoN.MainMenuMgr_WINDOW, "Window"); // V (q, ck)
dismissMenu(PAResourceItoN.MainMenuMgr_WINDOW, "Window"); // V (q, ck)
selectMenu(RDIResource.MainWinMenuMgr_LAYOUT, "Layout"); // V (q, ck)
dismissMenu(RDIResource.MainWinMenuMgr_LAYOUT, "Layout"); // V (q, ck)
selectMenu(PAResourceItoN.MainMenuMgr_VIEW, "View"); // V (q, ck)
dismissMenu(PAResourceItoN.MainMenuMgr_VIEW, "View"); // V (q, ck)
selectMenu(PAResourceItoN.MainMenuMgr_HELP, "Help"); // V (q, ck)
selectMenu(PAResourceItoN.MainMenuMgr_DESIGN_HUBS, "Design Hubs"); // aa (ck)
selectMenu(PAResourceItoN.MainMenuMgr_DESIGN_HUBS, "Design Hubs"); // aa (ck)
dismissMenu(PAResourceItoN.MainMenuMgr_HELP, "Help"); // V (q, ck)
selectMenu(PAResourceItoN.MainMenuMgr_VIEW, "View"); // V (q, ck)
dismissMenu(PAResourceItoN.MainMenuMgr_VIEW, "View"); // V (q, ck)
selectMenu(RDIResource.MainWinMenuMgr_LAYOUT, "Layout"); // V (q, ck)
dismissMenu(RDIResource.MainWinMenuMgr_LAYOUT, "Layout"); // V (q, ck)
selectMenu(PAResourceItoN.MainMenuMgr_WINDOW, "Window"); // V (q, ck)
dismissMenu(PAResourceItoN.MainMenuMgr_WINDOW, "Window"); // V (q, ck)
selectMenu(PAResourceItoN.MainMenuMgr_REPORTS, "Reports"); // V (q, ck)
dismissMenu(PAResourceItoN.MainMenuMgr_REPORTS, "Reports"); // V (q, ck)
selectMenu(PAResourceItoN.MainMenuMgr_FLOW, "Flow"); // V (q, ck)
dismissMenu(PAResourceItoN.MainMenuMgr_FLOW, "Flow"); // V (q, ck)
selectMenu(PAResourceItoN.MainMenuMgr_EDIT, "Edit"); // V (q, ck)
dismissMenu(PAResourceItoN.MainMenuMgr_EDIT, "Edit"); // V (q, ck)
selectMenu(PAResourceItoN.MainMenuMgr_FILE, "File"); // V (q, ck)
dismissMenu(PAResourceItoN.MainMenuMgr_FILE, "File"); // V (q, ck)
selectMenu(PAResourceItoN.MainMenuMgr_EDIT, "Edit"); // V (q, ck)
dismissMenu(PAResourceItoN.MainMenuMgr_EDIT, "Edit"); // V (q, ck)
selectMenu(PAResourceItoN.MainMenuMgr_FILE, "File"); // V (q, ck)
selectMenu(PAResourceItoN.MainMenuMgr_PROJECT, "Project"); // aa (ck)
selectMenu(PAResourceItoN.MainMenuMgr_CHECKPOINT, "Checkpoint"); // aa (ck)
selectMenu(PAResourceItoN.MainMenuMgr_IP, "IP"); // aa (ck)
selectMenu(PAResourceItoN.MainMenuMgr_TEXT_EDITOR, "Text Editor"); // aa (ck)
selectMenu(PAResourceItoN.MainMenuMgr_EXPORT, "Export"); // aa (ck)
selectMenu(PAResourceItoN.MainMenuMgr_EXPORT, "Export"); // aa (ck)
selectMenu(PAResourceItoN.MainMenuMgr_TEXT_EDITOR, "Text Editor"); // aa (ck)
selectMenu(PAResourceItoN.MainMenuMgr_IP, "IP"); // aa (ck)
selectMenu(PAResourceItoN.MainMenuMgr_CHECKPOINT, "Checkpoint"); // aa (ck)
selectMenu(PAResourceItoN.MainMenuMgr_CHECKPOINT, "Checkpoint"); // aa (ck)
selectMenu(PAResourceItoN.MainMenuMgr_IP, "IP"); // aa (ck)
selectMenu(PAResourceItoN.MainMenuMgr_TEXT_EDITOR, "Text Editor"); // aa (ck)
selectMenu(PAResourceItoN.MainMenuMgr_EXPORT, "Export"); // aa (ck)
selectMenu(PAResourceItoN.MainMenuMgr_EXPORT, "Export"); // aa (ck)
selectMenu(PAResourceItoN.MainMenuMgr_IP, "IP"); // aa (ck)
selectMenu(PAResourceItoN.MainMenuMgr_PROJECT, "Project"); // aa (ck)
dismissMenu(PAResourceItoN.MainMenuMgr_FILE, "File"); // V (q, ck)
selectMenu(PAResourceItoN.MainMenuMgr_FLOW, "Flow"); // V (q, ck)
dismissMenu(PAResourceItoN.MainMenuMgr_FLOW, "Flow"); // V (q, ck)
selectMenu(PAResourceItoN.MainMenuMgr_EDIT, "Edit"); // V (q, ck)
dismissMenu(PAResourceItoN.MainMenuMgr_EDIT, "Edit"); // V (q, ck)
selectMenu(PAResourceItoN.MainMenuMgr_FLOW, "Flow"); // V (q, ck)
selectMenu(PAResourceItoN.MainMenuMgr_SETTINGS, "Settings"); // aa (ck)
selectMenu(PAResourceCommand.PACommandNames_SIMULATION_RUN, "Run Simulation"); // V (ck)
selectMenu(PAResourceCommand.PACommandNames_SIMULATION_RUN, "Run Simulation"); // V (ck)
selectMenu(PAResourceItoN.MainMenuMgr_SETTINGS, "Settings"); // aa (ck)
dismissMenu(PAResourceItoN.MainMenuMgr_FLOW, "Flow"); // V (q, ck)
selectMenu(PAResourceItoN.MainMenuMgr_TOOLS, "Tools"); // V (q, ck)
dismissMenu(PAResourceItoN.MainMenuMgr_TOOLS, "Tools"); // V (q, ck)
selectMenu(PAResourceItoN.MainMenuMgr_FLOW, "Flow"); // V (q, ck)
selectMenu(PAResourceItoN.MainMenuMgr_SETTINGS, "Settings"); // aa (ck)
selectMenu(PAResourceCommand.PACommandNames_SIMULATION_RUN, "Run Simulation"); // V (ck)
selectMenu(PAResourceItoN.MainMenuMgr_SETTINGS, "Settings"); // aa (ck)
dismissMenu(PAResourceItoN.MainMenuMgr_FLOW, "Flow"); // V (q, ck)
selectMenu(PAResourceItoN.MainMenuMgr_TOOLS, "Tools"); // V (q, ck)
selectMenu(RDIResourceCommand.RDICommands_CUSTOM_COMMANDS, "Custom Commands"); // aa (ck)
selectMenuItem(PAResourceCommand.PACommandNames_LANGUAGE_TEMPLATES, "Language Templates"); // ad (ck)
dismissMenu(PAResourceItoN.MainMenuMgr_TOOLS, "Tools"); // V (q, ck)
// Run Command: PAResourceCommand.PACommandNames_LANGUAGE_TEMPLATES
// a (ck): Language Templates: addNotify
// [GUI Memory]: 101 MB (+803kb) [00:37:33]
// Elapsed time: 29 seconds
typeControlKey(null, null, 'c'); // c (c, a)
// [GUI Memory]: 107 MB (+1845kb) [00:38:14]
// HMemoryUtils.trashcanNow. Engine heap size: 1,228 MB. GUI used memory: 46 MB. Current time: 2/4/25 8:12:09 AM CET
// TclEventType: DG_GRAPH_STALE
// TclEventType: FILE_SET_CHANGE
// TclEventType: DG_ANALYSIS_MSG_RESET
// TclEventType: DG_ANALYSIS_MSG_RESET
// [Engine Memory]: 1,244 MB (+10226kb) [00:39:28]
// TclEventType: DG_GRAPH_GENERATED
// Elapsed time: 115 seconds
selectButton(RDIResource.BaseDialog_CLOSE, "Close"); // a (a)
selectButton(RDIResource.BaseDialog_CLOSE, "Close"); // a (a)
dismissDialog("Language Templates"); // a (ck)
selectTree(PAResourceItoN.MsgTreePanel_MESSAGE_VIEW_TREE, "[, Synthesis, [Common 17-345] A valid license was not found for feature 'Synthesis' and/or device 'xc7vx485t'. Please run the Vivado License Manager for assistance in determining. which features and devices are licensed for your system.. Resolution: Check the status of your licenses in the Vivado License Manager. For debug help search Xilinx Support for Licensing FAQ. If you are using a license server, verify that the license server is up and running a version of the xilinx daemon that is compatible with the version of Xilinx software that you are using. Please note that Vivado 2017.3 and later requires upgrading your license server tools to the Flex 11.14.1 tools. Please confirm with your license admin that the correct version of the license server tools are installed.. ]", 1, false); // ah (O, ck)
selectTree(PAResourceItoN.MsgTreePanel_MESSAGE_VIEW_TREE, "[, Synthesis, [Common 17-345] A valid license was not found for feature 'Synthesis' and/or device 'xc7vx485t'. Please run the Vivado License Manager for assistance in determining. which features and devices are licensed for your system.. Resolution: Check the status of your licenses in the Vivado License Manager. For debug help search Xilinx Support for Licensing FAQ. If you are using a license server, verify that the license server is up and running a version of the xilinx daemon that is compatible with the version of Xilinx software that you are using. Please note that Vivado 2017.3 and later requires upgrading your license server tools to the Flex 11.14.1 tools. Please confirm with your license admin that the correct version of the license server tools are installed.. ]", 1, false, false, false, false, false, true); // ah (O, ck) - Double Click
selectTree(PAResourceItoN.MsgTreePanel_MESSAGE_VIEW_TREE, "[, Synthesis, [Common 17-345] A valid license was not found for feature 'Synthesis' and/or device 'xc7vx485t'. Please run the Vivado License Manager for assistance in determining. which features and devices are licensed for your system.. Resolution: Check the status of your licenses in the Vivado License Manager. For debug help search Xilinx Support for Licensing FAQ. If you are using a license server, verify that the license server is up and running a version of the xilinx daemon that is compatible with the version of Xilinx software that you are using. Please note that Vivado 2017.3 and later requires upgrading your license server tools to the Flex 11.14.1 tools. Please confirm with your license admin that the correct version of the license server tools are installed.. ]", 1, false); // ah (O, ck)
selectTree(PAResourceItoN.MsgTreePanel_MESSAGE_VIEW_TREE, "[, Synthesis, [Common 17-345] A valid license was not found for feature 'Synthesis' and/or device 'xc7vx485t'. Please run the Vivado License Manager for assistance in determining. which features and devices are licensed for your system.. Resolution: Check the status of your licenses in the Vivado License Manager. For debug help search Xilinx Support for Licensing FAQ. If you are using a license server, verify that the license server is up and running a version of the xilinx daemon that is compatible with the version of Xilinx software that you are using. Please note that Vivado 2017.3 and later requires upgrading your license server tools to the Flex 11.14.1 tools. Please confirm with your license admin that the correct version of the license server tools are installed.. ]", 1, false); // ah (O, ck)
selectTree(PAResourceItoN.MsgTreePanel_MESSAGE_VIEW_TREE, "[, Synthesis, [Common 17-345] A valid license was not found for feature 'Synthesis' and/or device 'xc7vx485t'. Please run the Vivado License Manager for assistance in determining. which features and devices are licensed for your system.. Resolution: Check the status of your licenses in the Vivado License Manager. For debug help search Xilinx Support for Licensing FAQ. If you are using a license server, verify that the license server is up and running a version of the xilinx daemon that is compatible with the version of Xilinx software that you are using. Please note that Vivado 2017.3 and later requires upgrading your license server tools to the Flex 11.14.1 tools. Please confirm with your license admin that the correct version of the license server tools are installed.. ]", 1, false, false, false, false, false, true); // ah (O, ck) - Double Click
selectTree(PAResourceItoN.MsgTreePanel_MESSAGE_VIEW_TREE, "[, Synthesis, [Common 17-345] A valid license was not found for feature 'Synthesis' and/or device 'xc7vx485t'. Please run the Vivado License Manager for assistance in determining. which features and devices are licensed for your system.. Resolution: Check the status of your licenses in the Vivado License Manager. For debug help search Xilinx Support for Licensing FAQ. If you are using a license server, verify that the license server is up and running a version of the xilinx daemon that is compatible with the version of Xilinx software that you are using. Please note that Vivado 2017.3 and later requires upgrading your license server tools to the Flex 11.14.1 tools. Please confirm with your license admin that the correct version of the license server tools are installed.. ]", 2, false); // ah (O, ck)
